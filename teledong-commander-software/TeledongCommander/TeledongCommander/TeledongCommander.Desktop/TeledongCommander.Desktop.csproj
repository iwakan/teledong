<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <!--If you are willing to use Windows/MacOS native APIs you will need to create 3 projects.
    One for Windows with net7.0-windows TFM, one for MacOS with net7.0-macos and one with net7.0 TFM for Linux.-->
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
  </PropertyGroup>

  <PropertyGroup>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <ApplicationIcon>icon.ico</ApplicationIcon>
    <PackageIcon>icon.png</PackageIcon>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="icon.ico" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\Media\icon.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Avalonia.Desktop" Version="11.1.4" />
    <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.1.4" />
    <PackageReference Include="Dotnet.Bundle" Version="0.9.13" />
    <PackageReference Include="SkiaSharp.NativeAssets.Linux.NoDependencies" Version="2.88.8" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\TeledongCommander\TeledongCommander.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="Icon.icns">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

	<PropertyGroup>
		<CFBundleName>TeledongCommander</CFBundleName>
		<CFBundleDisplayName>Teledong Commander</CFBundleDisplayName>
		<CFBundleIdentifier>com.teledong.commander</CFBundleIdentifier>
		<CFBundleVersion>0.9.1</CFBundleVersion>
		<CFBundleShortVersionString>0.9.1</CFBundleShortVersionString>
		<CFBundlePackageType>APPL</CFBundlePackageType>
		<CFBundleSignature>????</CFBundleSignature>
		<CFBundleExecutable>TeledongCommander.Desktop</CFBundleExecutable>
		<CFBundleIconFile>Icon.icns</CFBundleIconFile>
		<!-- Will be copied from output directory -->
		<NSPrincipalClass>NSApplication</NSPrincipalClass>
		<NSHighResolutionCapable>true</NSHighResolutionCapable>
	</PropertyGroup>
</Project>
