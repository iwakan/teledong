<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:TeledongCommander.ViewModels"
			 xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:local="clr-namespace:TeledongCommander"
             mc:Ignorable="d" d:DesignWidth="810" d:DesignHeight="700"
             x:Class="TeledongCommander.Views.MainView"
			 xmlns:lvc="using:LiveChartsCore.SkiaSharpView.Avalonia"
			 xmlns:ss="using:LiveChartsCore.SkiaSharpView"
             x:DataType="vm:MainViewModel">
	
	<UserControl.Resources>
		<SolidColorBrush x:Key="PrimaryBackground" Color="#a799b7"></SolidColorBrush>
		<SolidColorBrush x:Key="SecondaryBackground" Color="#533a71"></SolidColorBrush>
		<!--<SolidColorBrush x:Key="Foreground" Color="#fdf4dc"></SolidColorBrush>
		<SolidColorBrush x:Key="BorderBrush" Color="Black"></SolidColorBrush>-->
	</UserControl.Resources>
	
	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE, to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:MainViewModel />
	</Design.DataContext>

	<Grid Background="{StaticResource PrimaryBackground}" MinWidth="700" MinHeight="600">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="6*"></ColumnDefinition>
			<ColumnDefinition></ColumnDefinition>
			<ColumnDefinition Width="6*"></ColumnDefinition>
		</Grid.ColumnDefinitions>

		<!-- INPUT AREA -->
		<Border Background="{StaticResource SecondaryBackground}" BorderThickness="0" Margin="20" Padding="20" CornerRadius="30" Grid.Column="0">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition></RowDefinition>
					<RowDefinition Height="2*"></RowDefinition>
					<RowDefinition Height="6*"></RowDefinition>
				</Grid.RowDefinitions>
				
				<TextBlock Text="Input" FontSize="20" Grid.Row="0" HorizontalAlignment="Center"></TextBlock>
				<Separator VerticalAlignment="Bottom" Margin="0,0,0,5" />

				<StackPanel Grid.Row="1">
					<!--Make sure the command parameter IDs match the enum values. Too bothersome to pass enums directly in xaml-->
					<RadioButton GroupName="InputDevice" Content="Teledong" Command="{Binding SetInputDeviceCommand}" CommandParameter="0" ToolTip.Tip="Gets movement from a Teledong connected to the computer via USB." IsChecked="True"></RadioButton>
					<RadioButton GroupName="InputDevice" Content="Mouse" Command="{Binding SetInputDeviceCommand}" CommandParameter="1" ToolTip.Tip="Gets movement from the user's computer mouse." IsChecked="False"></RadioButton>
				</StackPanel>

				<Button Content="Connect" Background="Green" Command="{Binding ConnectInputDeviceCommand}" IsVisible="{Binding InputDeviceIsTeledong}" IsEnabled="{Binding CanClickConnectInputDeviceButton}" Margin="0,0,0,20" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Bottom"></Button>
				
				<Separator Grid.Row="1" Margin="0,0,0,5" VerticalAlignment="Bottom"/>

				<StackPanel Grid.Row="2" Spacing="10" Margin="5,10,5,10">
					
					<DockPanel>
						<TextBlock Text="Status: " ></TextBlock>
						<TextBlock Text="{Binding InputDeviceStatusText}"></TextBlock>
					</DockPanel>
					<TextBlock IsVisible="{Binding TeledongIsCalibrating}" Text="Stroke your Teledong up and down repeatedly for 10 seconds!" Foreground="MediumSeaGreen"  TextWrapping="Wrap" Width="220"></TextBlock>

					<TextBlock Text="Motion graph:" Margin="0,0,0,-6"></TextBlock>
					<lvc:CartesianChart x:Name="inputPositionChart" TooltipPosition="Hidden" BorderBrush="{StaticResource PrimaryBackground}" BorderThickness="1" Height="70" Series="{Binding InputPositionSeries}" XAxes="{Binding PositionChartXAxes}" AnimationsSpeed="0" ZoomMode="None">
					</lvc:CartesianChart>

					<CheckBox Content="Keep current position on release" IsChecked="{Binding TeledongKeepPositionOnRelease}" IsVisible="{Binding InputDeviceIsTeledong}" ToolTip.Tip="When you let go of the Teledong mid-stroke, this option decides whether to hold the current position, or reset to the top position. NB: If this is enabled, it introduces a minor extra latency (50-100ms)."/>

					<!--<ToggleSwitch Margin="0,20,0,0" Content="Sensor mode" IsChecked="{Binding TeledongSunlightMode}" OnContent="Sunlight" OffContent="Indoor lighting" IsVisible="{Binding InputDeviceIsTeledong}"></ToggleSwitch>-->
					<StackPanel Orientation="Horizontal" IsVisible="{Binding InputDeviceIsTeledong}" Margin="0,10,0,0" Spacing="10">
						<Button Command="{Binding CalibrateTeledongCommand}" Content="Calibrate"></Button>
						<materialIcons:MaterialIcon Kind="Warning" Width="30" Height="30" Grid.Column="1" IsVisible="{Binding TeledongHasBadCalibration}" Foreground="Orange" VerticalAlignment="Center" HorizontalAlignment="Stretch" />
						<TextBlock Text="Bad sensor values detected, consider recalibrating Teledong." IsVisible="{Binding TeledongHasBadCalibration}" VerticalAlignment="Center" TextWrapping="Wrap" Width="170"></TextBlock>
					</StackPanel>
					
					<TextBlock Text="{Binding InputDeviceError}" Foreground="Orange" TextWrapping="Wrap"/>


				</StackPanel>

				<Button Content="New software update available!" Foreground="LightGreen" IsVisible="{Binding HasNewVersion}" VerticalAlignment="Bottom" Grid.Row="2" Command="{Binding OpenWebsite}" />

			</Grid>
		</Border>

		<materialIcons:MaterialIcon Kind="ArrowRightBold" Width="80" Height="80" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" />
		<!--<TextBlock Text="ðŸ¡†" Grid.Column="1" FontSize="60" VerticalAlignment="Center" HorizontalAlignment="Center"/>-->

		<!-- OUTPUT AREA -->
		<Border Background="{StaticResource SecondaryBackground}" BorderThickness="0" Margin="20" Padding="20" CornerRadius="30" Grid.Column="2">
			<Grid>
				<Grid RowDefinitions="50,50,1.7*,250,Auto">

					<TextBlock Text="Output" FontSize="20" HorizontalAlignment="Center" Margin="0,0,0,15"></TextBlock>
				
					<DockPanel Grid.Row="1">
						<ComboBox ItemsSource="{Binding OutputDeviceTypes}" Grid.Row="1" MinWidth="200" SelectedIndex="{Binding SelectedOutputDeviceToAdd}" HorizontalAlignment="Left" VerticalAlignment="Center"></ComboBox>
						<Button Command="{Binding AddOutputDeviceCommand}" Grid.Row="1" MinWidth="70" MinHeight="30" IsVisible="True" HorizontalAlignment="Right" VerticalAlignment="Center">
							<StackPanel Orientation="Horizontal">
								<materialIcons:MaterialIcon Kind="Plus" VerticalAlignment="Center" />
								<TextBlock Text=" Add" VerticalAlignment="Center"></TextBlock>
							</StackPanel>
						</Button>
					</DockPanel>

					<Grid Grid.Row="2">
						<Border Grid.Row="1"  BorderBrush="Gray" BorderThickness="1" Background="#30000000">
							<ScrollViewer>
								<ListBox ItemsSource="{Binding OutputDevices}" Padding="0,5,0,0" SelectionMode="Single" SelectedItem="{Binding SelectedOutputDevice}">
									<ListBox.ItemTemplate>
										<DataTemplate>
											<local:OutputDevicePreviewView Margin="0,-8,0,-8"></local:OutputDevicePreviewView>
										</DataTemplate>
									</ListBox.ItemTemplate>
								</ListBox>
							</ScrollViewer>
						</Border>
						<TextBlock IsVisible="{Binding !HasOutputDevices}" Text="No output devices. Please add one." VerticalAlignment="Center" HorizontalAlignment="Center"/>
					</Grid>

					<Grid IsVisible="{Binding !AdvancedOutputSettingsAreOpen}" Grid.Row="3" Margin="0,10,0,0">
						<ContentControl Content="{Binding SelectedOutputDevice}">
							<ContentControl.DataTemplates>
								<DataTemplate DataType="vm:HandyOnlineApiViewModel">
									<local:HandyOnlineApiSettingsView></local:HandyOnlineApiSettingsView>
								</DataTemplate>
								<DataTemplate DataType="vm:ButtplugApiViewModel">
									<local:ButtplugApiSettingsView></local:ButtplugApiSettingsView>
								</DataTemplate>
								<DataTemplate DataType="vm:FunscriptRecorderViewModel">
									<local:FunscriptRecorderSettingsView></local:FunscriptRecorderSettingsView>
								</DataTemplate>
							</ContentControl.DataTemplates>
							.
						</ContentControl>
					</Grid>

					<Grid Grid.Row="4" IsVisible="{Binding SelectedOutputDevice, Converter={x:Static ObjectConverters.IsNotNull}}"  VerticalAlignment="Bottom">
						<local:AdvancedOutputSettingsView DataContext="{Binding SelectedOutputDevice}"></local:AdvancedOutputSettingsView>
					</Grid>
					
				
					<!--
						<lvc:CartesianChart x:Name="outputPositionChart" TooltipPosition="Hidden" BorderBrush="{StaticResource PrimaryBackground}" BorderThickness="1" Height="70" Series="{Binding OutputPositionSeries}" XAxes="{Binding PositionChartXAxes}" AnimationsSpeed="0" ZoomMode="None">
						</lvc:CartesianChart>
					-->
				</Grid>

				<!--<Button Command="{Binding ToggleAdvancedOutputSettingsCommand}" IsVisible="{Binding SelectedOutputDevice, Converter={x:Static ObjectConverters.IsNotNull}}" Content="Toggle Advanced Settings" Grid.Row="2" MinWidth="70" MinHeight="30" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="10"></Button>-->
			</Grid>
		</Border>

		<!-- ABOUT/SETTINGS BOX -->
		<StackPanel VerticalAlignment="Bottom" Grid.Column="1" Spacing="15" Margin="0,0,0,25" >
			<Button Content="{materialIcons:MaterialIconExt Kind=QuestionMark, Size=30}" Command="{Binding ShowHelpCommand}" Height="50" Width="50" CornerRadius="10" HorizontalAlignment="Center"></Button>
			<Button Content="{materialIcons:MaterialIconExt Kind=HamburgerMenu, Size=30}" Command="{Binding ToggleInfoWindowCommand}" Height="50" Width="50" CornerRadius="10" HorizontalAlignment="Center"></Button>
		</StackPanel>
		
		<Border IsVisible="{Binding InfoWindowIsOpen}" Padding="20" BorderBrush="Black" BorderThickness="2" Background="{StaticResource PrimaryBackground}" CornerRadius="15" Grid.ColumnSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center">
			<StackPanel MinWidth="400" MinHeight="400" Spacing="10">

				<TextBlock Text="Teledong Commander software v1.0.0 - Teledong.com"></TextBlock>
				<!--TODO UPDATE VERSION NUMBER AUTOMATICALLY-->

				<TextBlock FontWeight="SemiBold" Text="Advanced debug info/settings" Margin="0,20,0,10"></TextBlock>
				
				<TextBlock Text="Raw sensor values" IsVisible="{Binding InputDeviceIsTeledong}"/>
				<TextBlock Text="{Binding SensorValuesDebugString}" IsVisible="{Binding InputDeviceIsTeledong}"></TextBlock>

				<StackPanel Orientation="Horizontal" IsVisible="{Binding InputDeviceIsTeledong}">
					<Button Margin="5" Content="Enter Teledong Bootloader" Command="{Binding TeledongBootToBootloaderCommand}" IsEnabled="{Binding InputDeviceIsTeledong}"></Button>
					<StackPanel>
						<TextBlock Margin="0" VerticalAlignment="Center" Text="{Binding TeledongFirmwareVersion, StringFormat='Current firmware version: {0}'}" />
						<TextBlock Margin="0" VerticalAlignment="Center" Text="{Binding NewFirmwareVersion, StringFormat='Newest firmware version: {0}'}" IsVisible="{Binding InputDeviceIsTeledong}"/>
					</StackPanel>
				</StackPanel>
				
				<CheckBox Margin="5" Content="Teledong sunlight mode" IsChecked="{Binding TeledongSunlightMode}"></CheckBox>

				<TextBlock Text="{Binding ReadInterval, StringFormat='Update interval: {0:0} ms'}" ToolTip.Tip="This is the time interval between each time the position is recorded and sent to the output device. Shorter values can result in a smoother and more accurate motion, but can also cause an unstable connection or jitter/stuttering on strokers if the bandwidth is not high enough. Default: 100ms" Height="25" Margin="0,10,0,-15"/>
				<Grid>
					<Button Content="-" Command="{Binding DecreaseReadIntervalCommand}" HorizontalAlignment="Left" VerticalAlignment="Center" Height="28"/>
					<Slider Value="{Binding ReadInterval}" VerticalAlignment="Center" Minimum="30" Maximum="250" Margin="40,-5,40,4" HorizontalAlignment="Stretch" LargeChange="50" SmallChange="10" ToolTip.Tip="This is the time interval between each time the position is recorded and sent to the output device. Shorter values will result in a smoother and more accurate motion, but can cause an unstable connection or jitter/stuttering on strokers if the bandwidth is not high enough. Default: 100ms" Height="35" />
					<Button Content="+" Command="{Binding IncreaseReadIntervalCommand}" HorizontalAlignment="Right" VerticalAlignment="Center" Height="28"/>
				</Grid>

				<TextBlock Text="The Handy API auth key:" ToolTip.Tip="The Handy Connection Key output requires an API key. If the built-in key does not work, you can provide your own here. You can receive a key from https://user.handyfeeling.com/" Height="25" Margin="0,10,0,-15"/>
				<TextBox Text="{Binding HandyManualAuthKey}"></TextBox>
				
			</StackPanel>	
		</Border>
		
	</Grid>
</UserControl>
